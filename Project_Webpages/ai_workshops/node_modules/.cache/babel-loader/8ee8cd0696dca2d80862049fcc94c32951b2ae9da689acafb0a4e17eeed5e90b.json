{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import Prism from\"prismjs\";import\"prismjs/components/prism-python\";// Load Python syntax support\nimport\"../styles/jupyter.css\";// Custom styles for the cell\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JupyterCell=_ref=>{let{code,output}=_ref;const codeRef=useRef(null);const[copied,setCopied]=useState(false);useEffect(()=>{Prism.highlightElement(codeRef.current);},[code]);const copyToClipboard=()=>{navigator.clipboard.writeText(code).then(()=>{setCopied(true);setTimeout(()=>setCopied(false),2000);}).catch(err=>console.error(\"Copy failed:\",err));};return/*#__PURE__*/_jsxs(\"div\",{className:\"jupyter-cell\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"jupyter-input\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"jupyter-label\",children:\"In [ ]:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"jupyter-code\",children:/*#__PURE__*/_jsx(\"code\",{ref:codeRef,className:\"language-python\",children:code})}),/*#__PURE__*/_jsxs(\"div\",{className:\"jupyter-footer\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"jupyter-language\",children:\"Python\"}),/*#__PURE__*/_jsx(\"button\",{className:\"jupyter-copy-button\",onClick:copyToClipboard,children:copied?\"âœ” Copied!\":\"ðŸ“‹ Copy\"})]})]}),output&&/*#__PURE__*/_jsxs(\"div\",{className:\"jupyter-output\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"jupyter-label\",children:\"Out [ ]:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"jupyter-output-content\",children:`${output}`})]})]});};export default JupyterCell;","map":{"version":3,"names":["React","useEffect","useRef","useState","Prism","jsx","_jsx","jsxs","_jsxs","JupyterCell","_ref","code","output","codeRef","copied","setCopied","highlightElement","current","copyToClipboard","navigator","clipboard","writeText","then","setTimeout","catch","err","console","error","className","children","ref","onClick"],"sources":["/Users/sebastian0571/Portfolio/Web_Portfolio/Project_Webpages/ai_workshops/src/components/JupyterCell.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/components/prism-python\";  // Load Python syntax support\nimport \"../styles/jupyter.css\"; // Custom styles for the cell\n\nconst JupyterCell = ({ code, output }) => {\n    const codeRef = useRef(null);\n    const [copied, setCopied] = useState(false);\n\n    useEffect(() => {\n        Prism.highlightElement(codeRef.current);\n    }, [code]);\n\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(code)\n            .then(() => {\n                setCopied(true);\n                setTimeout(() => setCopied(false), 2000);\n            })\n            .catch(err => console.error(\"Copy failed:\", err));\n    };\n\n    return (\n        <div className=\"jupyter-cell\">\n            {/* Input Area with Prism.js Highlighting */}\n            <div className=\"jupyter-input\">\n                <span className=\"jupyter-label\">In [ ]:</span>\n                <pre className=\"jupyter-code\">\n                    <code ref={codeRef} className=\"language-python\">\n                        {code}\n                    </code>\n                </pre>\n\n                {/* Bottom Bar with \"Python\" Label and Copy Button */}\n                <div className=\"jupyter-footer\">\n                    <span className=\"jupyter-language\">Python</span>\n                    <button className=\"jupyter-copy-button\" onClick={copyToClipboard}>\n                        {copied ? \"âœ” Copied!\" : \"ðŸ“‹ Copy\"}\n                    </button>\n                </div>\n            </div>\n\n            {/* Output Area (Optional) */}\n            {output && (\n                <div className=\"jupyter-output\">\n                    <span className=\"jupyter-label\">Out [ ]:</span>\n                    <pre className=\"jupyter-output-content\">{`${output}`}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default JupyterCell;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,iCAAiC,CAAG;AAC3C,MAAO,uBAAuB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAsB,IAArB,CAAEC,IAAI,CAAEC,MAAO,CAAC,CAAAF,IAAA,CACjC,KAAM,CAAAG,OAAO,CAAGX,MAAM,CAAC,IAAI,CAAC,CAC5B,KAAM,CAACY,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAE3CF,SAAS,CAAC,IAAM,CACZG,KAAK,CAACY,gBAAgB,CAACH,OAAO,CAACI,OAAO,CAAC,CAC3C,CAAC,CAAE,CAACN,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAO,eAAe,CAAGA,CAAA,GAAM,CAC1BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACV,IAAI,CAAC,CAC9BW,IAAI,CAAC,IAAM,CACRP,SAAS,CAAC,IAAI,CAAC,CACfQ,UAAU,CAAC,IAAMR,SAAS,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAC5C,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,EAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,CAAEF,GAAG,CAAC,CAAC,CACzD,CAAC,CAED,mBACIjB,KAAA,QAAKoB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAEzBrB,KAAA,QAAKoB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1BvB,IAAA,SAAMsB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,SAAO,CAAM,CAAC,cAC9CvB,IAAA,QAAKsB,SAAS,CAAC,cAAc,CAAAC,QAAA,cACzBvB,IAAA,SAAMwB,GAAG,CAAEjB,OAAQ,CAACe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC1ClB,IAAI,CACH,CAAC,CACN,CAAC,cAGNH,KAAA,QAAKoB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BvB,IAAA,SAAMsB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,QAAM,CAAM,CAAC,cAChDvB,IAAA,WAAQsB,SAAS,CAAC,qBAAqB,CAACG,OAAO,CAAEb,eAAgB,CAAAW,QAAA,CAC5Df,MAAM,CAAG,WAAW,CAAG,SAAS,CAC7B,CAAC,EACR,CAAC,EACL,CAAC,CAGLF,MAAM,eACHJ,KAAA,QAAKoB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BvB,IAAA,SAAMsB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC/CvB,IAAA,QAAKsB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAE,GAAGjB,MAAM,EAAE,CAAM,CAAC,EAC1D,CACR,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}